{"version":3,"sources":["components/BookShelfChanger.js","components/Book.js","components/Shelf.js","components/MainPage.js","BooksAPI.js","components/SearchPage.js","App.js","index.js"],"names":["BookShelfChanger","props","className","value","currentShelf","onChange","e","moveBook","book","target","disabled","shelves","map","shelf","key","id","title","Book","thumbnailPresent","imageLinks","thumbnail","authorText","authors","join","style","width","height","borderRadius","backgroundImage","Shelf","this","books","filter","Component","MainPage","to","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","then","res","json","data","update","method","body","JSON","stringify","search","query","SearchPage","state","matchingBooks","updateQuery","setState","fetchMatchingBooks","BooksAPI","error","type","placeholder","length","matchingBook","forEach","BooksApp","showSearchPage","exact","path","render","React","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.912252ea.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst BookShelfChanger = props => {\r\n  return (\r\n    <div className=\"book-shelf-changer\">\r\n      <select\r\n        //Sets default value to equal the shelf that the book is on\r\n        value={props.currentShelf}\r\n        //Updates the shelf of the book to the selected value\r\n        onChange={e => props.moveBook(props.book, e.target.value)}\r\n      >\r\n        <option value=\"move\" disabled>\r\n          Move to...\r\n        </option>\r\n        {/*Maps over shelves to create an option element for each*/}\r\n        {props.shelves.map(shelf => (\r\n          <option value={shelf.value} key={shelf.id}>\r\n            {shelf.title}\r\n          </option>\r\n        ))}\r\n        <option value=\"none\">None</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookShelfChanger;\r\n","import React from \"react\";\r\nimport BookShelfChanger from \"./BookShelfChanger\";\r\n\r\nconst Book = props => {\r\n  //Set a variable that reflects whether book has an imageLinks prop.\r\n  let thumbnailPresent = props.book.imageLinks\r\n    ? //If yes, set variable to the thumbnail value.\r\n      props.book.imageLinks.thumbnail\r\n    : //If no, set to empty so error is not triggered.\r\n      \"\";\r\n\r\n  let authorText = props.book.authors ? props.book.authors.join(\", \") : \"\";\r\n\r\n  return (\r\n    <div className=\"book\" id={props.book.id}>\r\n      <div className=\"book-top\">\r\n        <div\r\n          className=\"book-cover\"\r\n          style={{\r\n            width: 100,\r\n            height: 150,\r\n            borderRadius: 5,\r\n            backgroundImage: `url(\"${thumbnailPresent})`\r\n          }}\r\n        />\r\n\r\n        {/*Attach a bookshelf changer to each book*/}\r\n        <BookShelfChanger\r\n          book={props.book}\r\n          shelves={props.shelves}\r\n          currentShelf={props.currentShelf}\r\n          moveBook={props.moveBook}\r\n        />\r\n      </div>\r\n      <div className=\"book-info\">\r\n        <div className=\"book-title\">\r\n          <h2>{props.book.title}</h2>\r\n        </div>\r\n        <div className=\"book-authors\">\r\n          <h3>{authorText}</h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Book;\r\n","import React, { Component } from \"react\";\r\nimport Book from \"./Book\";\r\n\r\nclass Shelf extends Component {\r\n  render() {\r\n    //Create a shelf for each shelf in shelves array from App.js\r\n    return this.props.shelves.map(shelf => (\r\n      <div className=\"bookshelf\" id={shelf.value} key={shelf.id}>\r\n        <div className=\"bookshelf-header\">\r\n          <h2 className=\"bookshelf-title\">{shelf.title}</h2>\r\n        </div>\r\n        <div className=\"bookshelf-books\">\r\n          <ol className=\"books-grid main-grid\">\r\n            {this.props.books\r\n              //If the shelf value of the book matches the value of the current shelf...\r\n              .filter(book => book.shelf === shelf.value)\r\n              .map(book => {\r\n                //...make shelf equal the value of the matching book's shelf and...\r\n                let shelf = book.shelf;\r\n                //...return an <li> for that book.\r\n                return (\r\n                  <li key={book.id} className={`book-li ${book.shelf}`}>\r\n                    <Book\r\n                      book={book}\r\n                      shelves={this.props.shelves}\r\n                      moveBook={this.props.moveBook}\r\n                      currentShelf={shelf}\r\n                    />\r\n                  </li>\r\n                );\r\n              })}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    ));\r\n  }\r\n}\r\n\r\nexport default Shelf;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Shelf from \"./Shelf\";\r\n\r\nclass MainPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"list-books\">\r\n        <div className=\"list-books-title\">\r\n          <h1>MyReads</h1>\r\n        </div>\r\n\r\n        <div className=\"list-books-content\">\r\n          <Shelf\r\n            books={this.props.books}\r\n            shelves={this.props.shelves}\r\n            moveBook={this.props.moveBook}\r\n          />\r\n\r\n          <div className=\"open-search\">\r\n            <Link to=\"/search\">Add a book</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;\r\n","const api = \"https://reactnd-books-api.udacity.com\";\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token;\r\nif (!token)\r\n  token = localStorage.token = Math.random()\r\n    .toString(36)\r\n    .substr(-8);\r\n\r\nconst headers = {\r\n  Accept: \"application/json\",\r\n  Authorization: token\r\n};\r\n\r\nexport const get = bookId =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book);\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json());\r\n\r\nexport const search = query =>\r\n  fetch(`${api}/search`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({ query })\r\n  })\r\n    .then(res => res.json())\r\n    .then(data => data.books);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Book from \"./Book\";\r\nimport * as BooksAPI from \"../BooksAPI\";\r\n\r\nclass SearchPage extends Component {\r\n  state = {\r\n    query: \"\",\r\n    matchingBooks: []\r\n  };\r\n\r\n  updateQuery = query => {\r\n    this.setState({ query: query });\r\n    this.fetchMatchingBooks(query);\r\n  };\r\n\r\n  fetchMatchingBooks = query => {\r\n    query\r\n      ? BooksAPI.search(query).then(matchingBooks => {\r\n          matchingBooks.error\r\n            ? this.setState({ matchingBooks: [] })\r\n            : this.setState({ matchingBooks: matchingBooks });\r\n        })\r\n      : this.setState({ matchingBooks: [] });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link to=\"/\" className=\"close-search\">\r\n            Close\r\n          </Link>\r\n          <div className=\"search-books-input-wrapper\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by title or author\"\r\n              value={this.state.query}\r\n              onChange={e => this.updateQuery(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"search-books-results\">\r\n          {this.state.query !== \"\" ? (\r\n            <h3 className=\"searchResults\">\r\n              Your search for <span className=\"pink\">\"{this.state.query}\"</span>{\" \"}\r\n              yielded {this.state.matchingBooks.length} results:\r\n            </h3>\r\n          ) : (\r\n            <h2 className=\"searchResults\">\r\n              Please enter a search term in the field above.\r\n            </h2>\r\n          )}\r\n          <ol className=\"books-grid results-grid\">\r\n            {this.state.matchingBooks.map(matchingBook => {\r\n              let shelf = \"none\";\r\n              if (this.props.books.length > 0) {\r\n                this.props.books.forEach(book => {\r\n                  if (book.id === matchingBook.id) {\r\n                    shelf = book.shelf;\r\n                  }\r\n                });\r\n              }\r\n\r\n              return (\r\n                <li key={matchingBook.id} className=\"book-li search-li\">\r\n                  <Book\r\n                    book={matchingBook}\r\n                    shelves={this.props.shelves}\r\n                    moveBook={this.props.moveBook}\r\n                    currentShelf={shelf}\r\n                  />\r\n                </li>\r\n              );\r\n            })}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchPage;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport MainPage from \"./components/MainPage\";\r\nimport SearchPage from \"./components/SearchPage\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\nimport \"./App.css\";\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    showSearchPage: false,\r\n    books: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    BooksAPI.getAll().then(books => {\r\n      this.setState({ books: books });\r\n    });\r\n  }\r\n\r\n  moveBook = (book, shelf) => {\r\n    BooksAPI.update(book, shelf);\r\n    BooksAPI.getAll().then(books => {\r\n      this.setState({ books: books });\r\n    });\r\n  };\r\n\r\n  shelves = [\r\n    { id: 1, value: \"currentlyReading\", title: \"Currently Reading\" },\r\n    { id: 2, value: \"wantToRead\", title: \"Want To Read\" },\r\n    { id: 3, value: \"read\", title: \"Read\" }\r\n  ];\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={() => (\r\n            <MainPage\r\n              moveBook={this.moveBook}\r\n              books={this.state.books}\r\n              shelves={this.shelves}\r\n            />\r\n          )}\r\n        />\r\n\r\n        <Route\r\n          path=\"/search\"\r\n          render={() => (\r\n            <SearchPage\r\n              shelves={this.shelves}\r\n              books={this.state.books}\r\n              moveBook={this.moveBook}\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BooksApp;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter  basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}