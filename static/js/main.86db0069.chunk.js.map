{"version":3,"sources":["components/BookShelfChanger.js","components/Book.js","components/Shelf.js","components/MainPage.js","BooksAPI.js","components/SearchPage.js","App.js","index.js"],"names":["BookShelfChanger","props","react_default","a","createElement","className","value","currentShelf","onChange","e","moveBook","book","target","disabled","shelves","map","shelf","key","id","title","Book","thumbnailPresent","imageLinks","thumbnail","authorText","authors","join","style","width","height","backgroundImage","concat","components_BookShelfChanger","Shelf","_this","this","books","filter","components_Book","Component","MainPage","components_Shelf","react_router_dom","to","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","then","res","json","data","update","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","SearchPage","state","matchingBooks","updateQuery","setState","fetchMatchingBooks","BooksAPI","error","_this2","type","placeholder","length","matchingBook","forEach","BooksApp","showSearchPage","_this3","react_router","exact","path","render","components_MainPage","components_SearchPage","React","ReactDOM","basename","process","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.86db0069.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst BookShelfChanger = props => {\r\n  return (\r\n    <div className=\"book-shelf-changer\">\r\n      <select\r\n        //Sets default value to equal the shelf that the book is on\r\n        value={props.currentShelf}\r\n        //Updates the shelf of the book to the selected value\r\n        onChange={e => props.moveBook(props.book, e.target.value)}\r\n      >\r\n        <option value=\"move\" disabled>\r\n          Move to...\r\n        </option>\r\n        {/*Maps over shelves to create an option element for each*/}\r\n        {props.shelves.map(shelf => (\r\n          <option value={shelf.value} key={shelf.id}>\r\n            {shelf.title}\r\n          </option>\r\n        ))}\r\n        <option value=\"none\">None</option>\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookShelfChanger;\r\n","import React from \"react\";\r\nimport BookShelfChanger from \"./BookShelfChanger\";\r\n\r\nconst Book = props => {\r\n  //Set a variable that reflects whether book has an imageLinks prop.\r\n  let thumbnailPresent = props.book.imageLinks\r\n    ? //If yes, set variable to the thumbnail value.\r\n      props.book.imageLinks.thumbnail\r\n    : //If no, set to empty so error is not triggered.\r\n      \"\";\r\n\r\n  let authorText = props.book.authors ? props.book.authors.join(\", \") : \"\";\r\n\r\n  return (\r\n    <div className=\"book\" id={props.book.id}>\r\n      <div className=\"book-top\">\r\n        <div\r\n          className=\"book-cover\"\r\n          style={{\r\n            width: 128,\r\n            height: 188,\r\n            backgroundImage: `url(\"${thumbnailPresent})`\r\n          }}\r\n        />\r\n\r\n        {/*Attach a bookshelf changer to each book*/}\r\n        <BookShelfChanger\r\n          book={props.book}\r\n          shelves={props.shelves}\r\n          currentShelf={props.currentShelf}\r\n          moveBook={props.moveBook}\r\n        />\r\n      </div>\r\n      <div className=\"book-info\">\r\n        <div className=\"book-title\"><h2>{props.book.title}</h2></div>\r\n        <div className=\"book-authors\"><h3>{authorText}</h3></div>\r\n        <hr></hr>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Book;\r\n","import React, { Component } from \"react\";\r\nimport Book from \"./Book\";\r\n\r\nclass Shelf extends Component {\r\n  render() {\r\n    //Create a shelf for each shelf in shelves array from App.js\r\n    return this.props.shelves.map(shelf => (\r\n      <div className=\"bookshelf\" id={shelf.value} key={shelf.id}>\r\n        <h2 className=\"bookshelf-title\">{shelf.title}</h2>\r\n        <div className=\"bookshelf-books\">\r\n          <ol className=\"books-grid main-grid\">\r\n            {this.props.books\r\n              //If the shelf value of the book matches the value of the current shelf...\r\n              .filter(book => book.shelf === shelf.value)\r\n              .map(book => {\r\n                //...make shelf equal the value of the matching book's shelf and...\r\n                let shelf = book.shelf;\r\n                //...return an <li> for that book.\r\n                return (\r\n                  <li key={book.id} className={`book-li ${book.shelf}`}>\r\n                    <Book\r\n                      book={book}\r\n                      shelves={this.props.shelves}\r\n                      moveBook={this.props.moveBook}\r\n                      currentShelf={shelf}\r\n                    />\r\n                  </li>\r\n                );\r\n              })}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    ));\r\n  }\r\n}\r\n\r\nexport default Shelf;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Shelf from \"./Shelf\";\r\n\r\nclass MainPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"list-books\">\r\n        <div className=\"list-books-title\">\r\n          <h1>Library</h1>\r\n        </div>\r\n\r\n        <div className=\"list-books-content\">\r\n          <Shelf\r\n            books={this.props.books}\r\n            shelves={this.props.shelves}\r\n            moveBook={this.props.moveBook}\r\n          />\r\n\r\n          <div className=\"open-search\">\r\n            <Link to=\"/search\">Add a book</Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;\r\n","const api = \"https://reactnd-books-api.udacity.com\";\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token;\r\nif (!token)\r\n  token = localStorage.token = Math.random()\r\n    .toString(36)\r\n    .substr(-8);\r\n\r\nconst headers = {\r\n  Accept: \"application/json\",\r\n  Authorization: token\r\n};\r\n\r\nexport const get = bookId =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book);\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books);\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: \"PUT\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json());\r\n\r\nexport const search = query =>\r\n  fetch(`${api}/search`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      ...headers,\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({ query })\r\n  })\r\n    .then(res => res.json())\r\n    .then(data => data.books);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Book from \"./Book\";\r\nimport * as BooksAPI from \"../BooksAPI\";\r\n\r\nclass SearchPage extends Component {\r\n  state = {\r\n    query: \"\",\r\n    matchingBooks: []\r\n  };\r\n\r\n  updateQuery = query => {\r\n    this.setState({ query: query });\r\n    this.fetchMatchingBooks(query);\r\n  };\r\n\r\n  fetchMatchingBooks = query => {\r\n    query\r\n      ? BooksAPI.search(query).then(matchingBooks => {\r\n          matchingBooks.error\r\n            ? this.setState({ matchingBooks: [] })\r\n            : this.setState({ matchingBooks: matchingBooks });\r\n        })\r\n      : this.setState({ matchingBooks: [] });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link to=\"/\" className=\"close-search\">\r\n            Close\r\n          </Link>\r\n          <div className=\"search-books-input-wrapper\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by title or author\"\r\n              value={this.state.query}\r\n              onChange={e => this.updateQuery(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"search-books-results\">\r\n          {this.state.query !== \"\" ? (\r\n            <h3 className=\"searchResults\">\r\n              Your search for <span className=\"pink\">\"{this.state.query}\"</span>{\" \"}\r\n              yielded {this.state.matchingBooks.length} results:\r\n            </h3>\r\n          ) : (\r\n            <h2 className=\"searchResults\">\r\n              Please enter a search term in the field above.\r\n            </h2>\r\n          )}\r\n          <ol className=\"books-grid results-grid\">\r\n            {this.state.matchingBooks.map(matchingBook => {\r\n              let shelf = \"none\";\r\n              if (this.props.books.length > 0) {\r\n                this.props.books.forEach(book => {\r\n                  if (book.id === matchingBook.id) {\r\n                    shelf = book.shelf;\r\n                  }\r\n                });\r\n              }\r\n\r\n              return (\r\n                <li key={matchingBook.id} className=\"book-li search-li\">\r\n                  <Book\r\n                    book={matchingBook}\r\n                    shelves={this.props.shelves}\r\n                    moveBook={this.props.moveBook}\r\n                    currentShelf={shelf}\r\n                  />\r\n                </li>\r\n              );\r\n            })}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchPage;\r\n","import React from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport MainPage from \"./components/MainPage\";\r\nimport SearchPage from \"./components/SearchPage\";\r\nimport * as BooksAPI from \"./BooksAPI\";\r\nimport \"./App.css\";\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    showSearchPage: false,\r\n    books: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    BooksAPI.getAll().then(books => {\r\n      this.setState({ books: books });\r\n    });\r\n  }\r\n\r\n  moveBook = (book, shelf) => {\r\n    BooksAPI.update(book, shelf);\r\n    BooksAPI.getAll().then(books => {\r\n      this.setState({ books: books });\r\n    });\r\n  };\r\n\r\n  shelves = [\r\n    { id: 1, value: \"currentlyReading\", title: \"Currently Reading\" },\r\n    { id: 2, value: \"wantToRead\", title: \"Want To Read\" },\r\n    { id: 3, value: \"read\", title: \"Read\" }\r\n  ];\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={() => (\r\n            <MainPage\r\n              moveBook={this.moveBook}\r\n              books={this.state.books}\r\n              shelves={this.shelves}\r\n            />\r\n          )}\r\n        />\r\n\r\n        <Route\r\n          path=\"/search\"\r\n          render={() => (\r\n            <SearchPage\r\n              shelves={this.shelves}\r\n              books={this.state.books}\r\n              moveBook={this.moveBook}\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BooksApp;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter  basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}